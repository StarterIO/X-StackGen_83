package io.starter.StackGen.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import org.springframework.validation.annotation.Validated;
import javax.validation.Valid;
import javax.validation.constraints.*;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonIgnore;
import io.starter.ignite.model.DataModelObject;
/**
 ############################## DO NOT EDIT: GENERATED FILE ##############################

    Generated by Starter StackGen: http://stackgen.io
    Powered by Swagger Codegen: http://swagger.io
    
	Generator version: (2.4.8)
	
	Template file: JavaSpring/pojo.mustache
	
############################## DO NOT EDIT: GENERATED FILE ##############################
 
 Description: Privilege
 */
 


@JsonInclude(JsonInclude.Include.NON_EMPTY)

@javax.annotation.Generated(value = "io.starter.ignite.generator.swagger.languages.StackGenSpringCodegen", date = "2020-06-10T12:46:05.059-07:00")

public class Privilege  implements  io.starter.ignite.model.DataModelObject {

  @JsonProperty("id")
  public Long id = null;


  @JsonProperty("name")
  public String name = null;

  /**
   * Privilege Type
   */
  public enum TypeEnum {
    INSERT("insert"),
    
    READ("read"),
    
    WRITE("write"),
    
    DELETE("delete"),
    
    EXECUTE("execute"),
    
    ALL("all");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equalsIgnoreCase(text)) {
          return b;
        }
      }
      return null;
    }
  }


  @JsonProperty("type")
  public TypeEnum type = null;


  @JsonProperty("keyVersion")
  public Long keyVersion = null;


  @JsonProperty("keySpec")
  public String keySpec = "dev";


  @JsonProperty("ownerId")
  public Long ownerId = null;


  @JsonProperty("createdDate")
  public OffsetDateTime createdDate = null;


  @JsonProperty("modifiedDate")
  public OffsetDateTime modifiedDate = null;

   /**
   * Primary Key for Object (generated column)
   * @return id
  **/


  @ApiModelProperty(name="id",       value = "Primary Key for Object (generated column)")
  public Long getId() {
    return id;
  }

  public Privilege name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the System Privilege
   * @return name
  **/
  @NotNull


  @ApiModelProperty(name="name", example = "Read Access to Content",       required = true, value = "Name of the System Privilege")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Privilege type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Privilege Type
   * @return type
  **/


  @ApiModelProperty(name="type",       value = "Privilege Type")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public Privilege keyVersion(Long keyVersion) {
    this.keyVersion = keyVersion;
    return this;
  }

   /**
   * The version of the SecureField key used to crypt this row (generated column)
   * @return keyVersion
  **/


  @ApiModelProperty(name="keyVersion",       value = "The version of the SecureField key used to crypt this row (generated column)")
  public Long getKeyVersion() {
    return keyVersion;
  }

  public void setKeyVersion(Long keyVersion) {
    this.keyVersion = keyVersion;
  }

   /**
   * The spec of the SecureField key used to crypt this row (generated column)
   * @return keySpec
  **/


  @ApiModelProperty(name="keySpec", example = "keySource:system",       value = "The spec of the SecureField key used to crypt this row (generated column)")
  public String getKeySpec() {
    return keySpec;
  }

  public Privilege ownerId(Long ownerId) {
    this.ownerId = ownerId;
    return this;
  }

   /**
   * The ID of the user that owns this data (generated column)
   * @return ownerId
  **/


  @ApiModelProperty(name="ownerId",       value = "The ID of the user that owns this data (generated column)")
  public Long getOwnerId() {
    return ownerId;
  }

  public void setOwnerId(Long ownerId) {
    this.ownerId = ownerId;
  }

   /**
   * The created date for this record/object (generated column)
   * @return createdDate
  **/

  @Valid

  @ApiModelProperty(name="createdDate",       value = "The created date for this record/object (generated column)")
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public Privilege modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * The last-modified date for this record/object (generated column)
   * @return modifiedDate
  **/

  @Valid

  @ApiModelProperty(name="modifiedDate",       value = "The last-modified date for this record/object (generated column)")
  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Privilege privilege = (Privilege) o;
    return Objects.equals(this.id, privilege.id) &&
        Objects.equals(this.name, privilege.name) &&
        Objects.equals(this.type, privilege.type) &&
        Objects.equals(this.keyVersion, privilege.keyVersion) &&
        Objects.equals(this.keySpec, privilege.keySpec) &&
        Objects.equals(this.ownerId, privilege.ownerId) &&
        Objects.equals(this.createdDate, privilege.createdDate) &&
        Objects.equals(this.modifiedDate, privilege.modifiedDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, type, keyVersion, keySpec, ownerId, createdDate, modifiedDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Privilege {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    keyVersion: ").append(toIndentedString(keyVersion)).append("\n");
    sb.append("    keySpec: ").append(toIndentedString(keySpec)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
  * Starter StackGen DataModelObject impl.
  */
  @Override
  public DataModelObject getDelegate() {
    return null; // no delegate here
  }
  
  /**
  * Starter StackGen JSON method
  */
  @Override
  public String toJSON() {
    String ret =  new org.json.JSONObject(this).toString();
    ret = ret.replace("\\\"","\"");
    ret = ret.replace("\"}\"", "\"}");
    return ret;
  }
  
  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

